{"version":3,"sources":["components/molecules/chordPallete/chordPallete.module.css","style-variables.js","components/atoms/cardTitle/cardTitle.jsx","components/atoms/chordNotes/chordNotes.jsx","components/atoms/playerButton.jsx","components/atoms/chordPlayer/chordPlayer.jsx","components/atoms/card.jsx","components/atoms/openModalButton.jsx","components/atoms/chordPalleteOption/chordPalleteOption.jsx","components/molecules/chordPallete/chordPallete.jsx","components/organisms/palleteModal/palleteModal.jsx","lib/converter.js","components/organisms/cards/chordCard/chordCard.jsx","components/atoms/playBothButton.jsx","components/atoms/chordScalePlayer/chordScalePlayer.jsx","components/atoms/footer.jsx","components/atoms/header.jsx","components/atoms/scaleNotes/scaleNotes.jsx","components/atoms/scalePlayer/scalePlayer.jsx","components/atoms/scaleSelector.jsx","components/organisms/cards/scaleCard/scaleCard.jsx","components/atoms/bpmSlider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","variables","primaryColor","secondaryColor","headerTextColor","cardTitleColor","btnTextColor","scaleSelectorColor","cardTitleFontSize","Title","styled","span","CardTitle","props","children","Container","div","ChordNotes","useEffect","document","getElementById","innerHTML","vf","Vex","Flow","Factory","renderer","elementId","score","EasyScore","System","addStave","voices","voice","notes","join","addClef","svg","context","setAttribute","draw","id","Button","Message","PlayerButton","onClick","icon","faPlay","playChord","polySynth","Tone","cancel","triggerAttackRelease","ChordPlayer","connect","toMaster","Card","Wrapper","style","OpenModalButton","color","faEdit","Box","Item","ChordPalleteOption","selectOption","ChordPallete","className","styles","chordPallete","title","options","choices","map","choice","key","Modal","setAppElement","modalStyles","content","top","left","width","right","bottom","marginRight","transform","PalleteContainer","RootsPallete","TypesPallete","ModalFooter","PalleteModal","isOpen","modalIsOpen","onRequestClose","closeModal","pallete","roots","types","chordToNotes","chord","Chord","Object","values","octave","Tonal","note","chroma","index","toString","TitleButtonWrapper","TitleWrapper","PlayerNotesWrapper","NotesWrapper","ChordCard","chordName","useState","setModalIsOpen","palleteType","editChord","PlayBothButton","ChordScalePlayer","state","synth","oscillator","type","chordNotes","this","time","start","loop","getNewSequence","stop","position","playChordScale","bind","Component","Footer","footer","header","h1","Header","Accidental","Formatter","Stave","StaveNote","Renderer","ACCIDENTAL_REGEX","OCTAVE_REGREX","ScaleNotes","wrapperRef","React","createRef","setState","current","Backends","SVG","renderScale","slice","accidental","match","staveNote","clef","keys","toLowerCase","duration","addAccidental","secondHalf","length","secondNotes","substring","numRests","i","push","getContext","clear","firstStave","setContext","firstNotes","firstStaveNotes","FormatAndDraw","secondStave","secondStaveNotes","ref","ScalePlayer","sequence","playScale","SelectBox","select","ScaleSelector","value","currentScale","onChange","e","onScaleChange","target","chordScales","scale","ScaleSelectorWrapper","ScaleCard","root","currentScaleNotes","BpmSlider","bpm","setBpm","htmlFor","name","min","max","changedBpm","onBpmChange","App","updateScale","_","prevState","Scale","getChordScales","getScaleNotes","selectedScale","handleEditChord","handleScaleChange","handleBpmChange","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60ee4fd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordPallete\":\"chordPallete_chordPallete__3airV\",\"title\":\"chordPallete_title__3Ydpp\",\"options\":\"chordPallete_options__1cq5m\"};","const variables = {\n  primaryColor: '#21a1c7',\n  secondaryColor: '#2ec721',\n  headerTextColor: '#ffffff',\n  cardTitleColor: '#837f7f',\n  btnTextColor: '#ffffff',\n  scaleSelectorColor: '#333',\n  cardTitleFontSize: '1.7rem',\n}\n\nexport default variables;","import React from \"react\";\nimport styled from \"styled-components\";\nimport variables from \"../../../style-variables\";\n\nconst CardTitle = props => {\n  return <Title>{props.children}</Title>;\n};\n\nconst Title = styled.span`\n  font-size: ${variables.cardTitleFontSize};\n  color: ${variables.cardTitleColor};\n  user-select: none;\n`;\n\nexport default CardTitle;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Vex from \"vexflow\";\n\nconst ChordNotes = props => {\n  useEffect(() => {\n    document.getElementById(\"chordNotes\").innerHTML = \"\";\n    const vf = new Vex.Flow.Factory({\n      renderer: { elementId: \"chordNotes\" }\n    });\n    const score = vf.EasyScore();\n    const system = vf.System();\n    system\n      .addStave({\n        voices: [score.voice(score.notes(`(${props.notes.join(\" \")})/w`))]\n      })\n      .addClef(\"treble\");\n\n    const svg = vf.context.svg;\n    svg.setAttribute(\"width\", \"100%\");\n    svg.setAttribute(\"height\", \"100%\");\n    svg.setAttribute(\"viewBox\", \"0 0 150 150\"); // or whatever your defaults were\n    svg.setAttribute(\"preserveAspectRatio\", \"xMidYMid\");\n\n    vf.draw();\n  });\n  return <Container id=\"chordNotes\"></Container>;\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ChordNotes;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport variables from \"../../style-variables.js\";\n\nconst PlayerButton = props => {\n  return (\n    <Button onClick={() => props.onClick()}>\n      <FontAwesomeIcon icon={faPlay} />\n      <Message>{props.children}</Message>\n    </Button>\n  );\n};\n\nconst Button = styled.div`\n  display: flex;\n  align-items: center;\n  border-radius: 4px;\n  border: none;\n  height: 30%;\n  min-width: 15%;\n  padding: 0 2%;\n  color: ${variables.btnTextColor};\n  background: ${variables.primaryColor};\n  cursor: pointer;\n  font-size: 1rem;\n`;\n\nconst Message = styled.span`\n  margin-left: 10%;\n`;\n\nexport default PlayerButton;\n","import React from \"react\";\nimport * as Tone from \"tone\";\nimport PlayerButton from \"../playerButton\";\n\nconst ChordPlayer = props => {\n  let polySynth = new Tone.PolySynth(4, Tone.Synth).connect(\n    new Tone.Gain(0.1).toMaster()\n  );\n  return (\n    <PlayerButton\n      onClick={() => {\n        playChord(polySynth, props.notes);\n      }}\n    >\n      Play chord\n    </PlayerButton>\n  );\n};\n\nconst playChord = (polySynth, notes) => {\n  Tone.Transport.cancel();\n  polySynth.triggerAttackRelease(notes, \"1m\");\n};\n\nexport default ChordPlayer;\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 5%;\n  box-shadow: 0px 2px 3px -2px rgba(0, 0, 0, 0.5);\n  min-width: 45%;\n  height: 60%;\n  background-color: #fff;\n`;\n\nexport default Card;\n","import React from \"react\";\nimport style from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport variables from \"../../style-variables.js\";\n\nconst OpenModalButton = props => {\n  return (\n    <Wrapper>\n      <FontAwesomeIcon\n        color={variables.primaryColor}\n        icon={faEdit}\n        onClick={() => props.onClick()}\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = style.div`\n  cursor: pointer;\n`;\n\nexport default OpenModalButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ChordPalleteOption = props => {\n  return (\n    <Box\n      onClick={() => {\n        props.selectOption(props.children);\n      }}\n    >\n      <Item>{props.children}</Item>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  display: flex;\n  margin: 2px 2px;\n  width: 20%;\n  height: 50px;\n  border: 1px solid lightgrey;\n  border-radius: 10%;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  cursor: pointer;\n  transition: background-color 0.5s;\n`;\n\nconst Item = styled.span`\n  font-size: 0.8rem;\n`;\n\nexport default ChordPalleteOption;\n","import React from \"react\";\nimport ChordPalleteOption from \"../../atoms/chordPalleteOption/chordPalleteOption\";\nimport styles from \"./chordPallete.module.css\";\n\nconst ChordPallete = props => {\n  return (\n    <div className={styles.chordPallete}>\n      <span className={styles.title}>{props.title}</span>\n      <div className={styles.options}>\n        {props.choices.map(choice => {\n          return (\n            <ChordPalleteOption\n              key={choice}\n              selectOption={() => {\n                props.selectOption(choice);\n              }}\n            >\n              {choice}\n            </ChordPalleteOption>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ChordPallete;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport ChordPallete from \"../../molecules/chordPallete/chordPallete\";\n\nModal.setAppElement(\"#root\");\n\nconst modalStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"70%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nconst PalleteModal = props => {\n  return (\n    <Modal\n      style={modalStyles}\n      isOpen={props.modalIsOpen}\n      onRequestClose={props.closeModal}\n    >\n      <PalleteContainer>\n        <RootsPallete>\n          <ChordPallete\n            selectOption={choice => props.selectOption(choice, \"root\")}\n            {...props.pallete.roots}\n          ></ChordPallete>\n        </RootsPallete>\n        <TypesPallete>\n          <ChordPallete\n            selectOption={choice => props.selectOption(choice, \"type\")}\n            {...props.pallete.types}\n          ></ChordPallete>\n        </TypesPallete>\n      </PalleteContainer>\n      <ModalFooter>\n        <button onClick={props.closeModal}>Close</button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst PalleteContainer = styled.div`\n  margin-top: 2%;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst RootsPallete = styled.div`\n  width: 35%;\n  top: 0px;\n  left: 15%;\n`;\n\nconst TypesPallete = styled.div`\n  width: 35%;\n  top: 0px;\n  right: 15%;\n`;\n\nconst ModalFooter = styled.div`\n  margin-top: 5%;\n  padding: 0 10%;\n`;\n\nexport default PalleteModal;\n","\nimport { Tonal } from \"@tonaljs/modules\";\nimport { Chord } from \"@tonaljs/modules\";\n\nexport const chordToNotes = chord => {\n  /**\n   * Convert chord name to array of notes with octave number\n   * @param {string} chord - chord symbol\n   * @return {array} notes - notes with octave number\n   */\n  let notes = Chord.chord(Object.values(chord)).notes;\n  let octave = Tonal.note(notes[0]).chroma < 7 ? 4 : 3;\n  notes = notes.map((note, index) => {\n    // set chord notes to root position\n    if (\n      index > 0 &&\n      Tonal.note(note).chroma < Tonal.note(notes[index - 1]).chroma\n    ) {\n      octave += 1;\n    }\n    return note + octave.toString();\n  });\n  return notes;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CardTitle from \"../../../atoms/cardTitle/cardTitle\";\nimport ChordNotes from \"../../../atoms/chordNotes/chordNotes\";\nimport ChordPlayer from \"../../../atoms/chordPlayer/chordPlayer\";\nimport Card from \"../../../atoms/card\";\nimport OpenModalButton from \"../../../atoms/openModalButton\";\nimport PalleteModal from \"../../palleteModal/palleteModal\";\nimport { chordToNotes } from \"../../../../lib/converter\";\n\nconst ChordCard = props => {\n  let notes = chordToNotes(props.chord);\n  let chordName = Object.values(props.chord).join(\"\");\n  let [modalIsOpen, setModalIsOpen] = useState(false);\n  return (\n    <Card>\n      <TitleButtonWrapper>\n        <TitleWrapper>\n          <CardTitle>{chordName}</CardTitle>\n        </TitleWrapper>\n        <OpenModalButton\n          onClick={() => {\n            setModalIsOpen(true);\n          }}\n        />\n      </TitleButtonWrapper>\n      <PlayerNotesWrapper>\n        <ChordPlayer notes={notes}></ChordPlayer>\n        <NotesWrapper>\n          <ChordNotes notes={notes}></ChordNotes>\n        </NotesWrapper>\n      </PlayerNotesWrapper>\n      <PalleteModal\n        modalIsOpen={modalIsOpen}\n        closeModal={() => {\n          setModalIsOpen(false);\n        }}\n        selectOption={(choice, palleteType) => {\n          props.editChord(choice, palleteType);\n        }}\n        pallete={props.pallete}\n      ></PalleteModal>\n    </Card>\n  );\n};\n\nconst TitleButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30%;\n  padding: 3% 3%;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20%;\n  width: 20%;\n  margin-right: 5%;\n`;\n\nconst PlayerNotesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50%;\n  padding 0 5%;\n`;\n\nconst NotesWrapper = styled.div`\n  margin-left: 5%;\n  width: 30%;\n`;\n\nexport default ChordCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport variables from \"../../style-variables.js\";\n\nconst PlayBothButton = props => {\n  return (\n    <Button onClick={() => props.onClick()}>\n      <FontAwesomeIcon icon={faPlay} />\n      <Message>{props.children}</Message>\n    </Button>\n  );\n};\n\nconst Button = styled.div`\n  display: flex;\n  align-items: center;\n  border-radius: 4px;\n  border: none;\n  height: 60%;\n  min-width: 15%;\n  padding: 0 10%;\n  color: ${variables.btnTextColor};\n  background: ${variables.secondaryColor};\n  cursor: pointer;\n  font-size: 1rem;\n`;\n\nconst Message = styled.span`\n  margin-left: 10%;\n`;\n\nexport default PlayBothButton;\n","import React, { Component } from \"react\";\nimport { chordToNotes } from \"../../../lib/converter\";\nimport PlayBothButton from \"../../atoms/playBothButton\";\nimport * as Tone from \"tone\";\n\nclass ChordScalePlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      synth: new Tone.Synth({\n        oscillator: {\n          type: \"square\"\n        }\n      }).connect(new Tone.Gain(0.1).toMaster()),\n      polySynth: new Tone.PolySynth(4, Tone.Synth).connect(\n        new Tone.Gain(0.1).toMaster()\n      )\n    };\n  }\n\n  getNewSequence() {\n    Tone.Transport.cancel();\n    let chordNotes = chordToNotes(this.props.chord);\n    let chordSequence = new Tone.Part(\n      (time, chord) => {\n        this.state.polySynth.triggerAttackRelease(chord, \"2m\", time);\n      },\n      [[0, chordNotes]]\n    ).start(0);\n    chordSequence.loop = false;\n\n    let scaleSequence = new Tone.Sequence(\n      (time, note) => {\n        this.state.synth.triggerAttackRelease(note, \"4n\", time);\n      },\n      this.props.notes,\n      \"4n\"\n    ).start(0);\n    scaleSequence.loop = false;\n  }\n\n  playChordScale() {\n    this.getNewSequence();\n    Tone.Transport.stop();\n    Tone.Transport.position = 0;\n    Tone.Transport.start();\n  }\n\n  render() {\n    return (\n      <PlayBothButton onClick={this.playChordScale.bind(this)}>\n        Play Both\n      </PlayBothButton>\n    );\n  }\n}\n\nexport default ChordScalePlayer;\n","import styled from \"styled-components\";\nimport variables from \"../../style-variables\";\n\nconst Footer = styled.footer`\n  background-color: ${variables.primaryColor};\n  width: 100%;\n  height: 5%;\n  position: fixed;\n  bottom: 0;\n`;\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport variables from \"../../style-variables.js\";\n\nconst Header = props => {\n  return (\n    <Wrapper>\n      <Title>{props.children}</Title>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  background-color: ${variables.primaryColor};\n  position: fixed;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  margin-left: 3%;\n  user-select: none;\n  color: ${variables.headerTextColor};\n  font-weight: lighter;\n`;\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Vex from \"vexflow\";\n\nconst { Accidental, Formatter, Stave, StaveNote, Renderer } = Vex.Flow;\n\nconst ACCIDENTAL_REGEX = /[#b]+/;\nconst OCTAVE_REGREX = /\\d/;\n\nclass ScaleNotes extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapperRef = React.createRef();\n    this.state = {\n      renderer: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      renderer: new Renderer(this.wrapperRef.current, Renderer.Backends.SVG)\n    });\n  }\n\n  componentDidUpdate() {\n    this.renderScale();\n  }\n\n  firstStaveNotes() {\n    return this.props.notes.slice(0, 4).map(note => {\n      let accidental = note.match(ACCIDENTAL_REGEX);\n      let octave = note.match(OCTAVE_REGREX)[0];\n      let staveNote = new StaveNote({\n        clef: \"treble\",\n        keys: [note.slice(0, 1).toLowerCase() + \"/\" + octave],\n        duration: \"q\"\n      });\n      if (accidental) {\n        staveNote.addAccidental(0, new Accidental(accidental[0]));\n      }\n      return staveNote;\n    });\n  }\n\n  secondStaveNotes() {\n    let secondHalf = this.props.notes.slice(4, this.props.notes.length);\n    let secondNotes = secondHalf.map(note => {\n      let accidental = note.match(ACCIDENTAL_REGEX);\n      let octave = note.match(OCTAVE_REGREX)[0];\n      let staveNote = new StaveNote({\n        clef: \"treble\",\n        keys: [note.substring(0, 1).toLowerCase() + \"/\" + octave],\n        duration: \"q\"\n      });\n      if (accidental) {\n        staveNote.addAccidental(0, new Accidental(accidental[0]));\n      }\n      return staveNote;\n    });\n    // add extra rests\n    let numRests = 4 - secondHalf.length;\n    for (let i = 0; i < numRests; i++) {\n      secondNotes.push(\n        new StaveNote({ clef: \"treble\", keys: [\"b/4\"], duration: \"qr\" })\n      );\n    }\n    return secondNotes;\n  }\n\n  renderScale() {\n    const context = this.state.renderer.getContext();\n    context.clear();\n\n    const svg = context.svg;\n    svg.setAttribute(\"width\", \"100%\");\n    svg.setAttribute(\"height\", \"100%\");\n    svg.setAttribute(\"viewBox\", \"0 0 580 120\"); // or whatever your defaults were\n    svg.setAttribute(\"preserveAspectRatio\", \"xMidYMid\");\n\n    const firstStave = new Stave(20, 0, 300);\n    firstStave.addClef(\"treble\");\n    firstStave.setContext(context).draw();\n    const firstNotes = this.firstStaveNotes();\n    Formatter.FormatAndDraw(context, firstStave, firstNotes);\n\n    const secondStave = new Stave(320, 0, 300);\n    secondStave.setContext(context).draw();\n\n    const secondNotes = this.secondStaveNotes();\n    Formatter.FormatAndDraw(context, secondStave, secondNotes);\n  }\n\n  render() {\n    return <Container id=\"scaleNotes\" ref={this.wrapperRef}></Container>;\n  }\n}\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ScaleNotes;\n","import React, { Component } from \"react\";\nimport * as Tone from \"tone\";\nimport PlayerButton from \"../../atoms/playerButton\";\n\nclass ScalePlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      synth: new Tone.Synth({\n        oscillator: {\n          type: \"square\"\n        }\n      }).connect(new Tone.Gain(0.1).toMaster()),\n      sequence: this.getNewSequence()\n    };\n  }\n\n  getNewSequence() {\n    Tone.Transport.cancel();\n    let sequence = new Tone.Sequence(\n      (time, note) => {\n        this.state.synth.triggerAttackRelease(note, \"4n\", time);\n      },\n      this.props.notes,\n      \"4n\"\n    ).start(0);\n    sequence.loop = false;\n    return sequence;\n  }\n\n  playScale() {\n    this.getNewSequence();\n    Tone.Transport.stop();\n    Tone.Transport.position = 0;\n    Tone.Transport.start();\n  }\n\n  render() {\n    return (\n      <PlayerButton onClick={this.playScale.bind(this)} id=\"playChord\">\n        Play scale\n      </PlayerButton>\n    );\n  }\n}\n\nexport default ScalePlayer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport variables from \"../../style-variables\";\n\nconst ScaleSelector = props => {\n  return (\n    <SelectBox\n      value={props.currentScale}\n      onChange={e => props.onScaleChange(e.target.value)}\n    >\n      {props.chordScales.map(scale => {\n        return (\n          <option value={scale} key={scale}>\n            {scale}\n          </option>\n        );\n      })}\n    </SelectBox>\n  );\n};\n\nconst SelectBox = styled.select`\n  cursor: pointer;\n  outline: none;\n  background: transparent;\n  box-shadow: none;\n  width: 100%;\n  color: ${variables.scaleSelectorColor};\n`;\n\nexport default ScaleSelector;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScaleNotes from \"../../../atoms/scaleNotes/scaleNotes\";\nimport ScalePlayer from \"../../../atoms/scalePlayer/scalePlayer\";\nimport ScaleSelector from \"../../../atoms/scaleSelector\";\nimport Card from \"../../../atoms/card\";\nimport CardTitle from \"../../../atoms/cardTitle/cardTitle\";\n\nconst ScaleCard = props => {\n  return (\n    <Card>\n      <TitleButtonWrapper>\n        <TitleWrapper>\n          <CardTitle>{props.chord.root + \" \" + props.currentScale}</CardTitle>\n        </TitleWrapper>\n        <ScaleSelectorWrapper>\n          <ScaleSelector\n            currentScale={props.currentScale}\n            chordScales={props.chordScales}\n            onScaleChange={scale => {\n              props.onScaleChange(scale);\n            }}\n          />\n        </ScaleSelectorWrapper>\n      </TitleButtonWrapper>\n      <PlayerNotesWrapper>\n        <ScalePlayer notes={props.currentScaleNotes}></ScalePlayer>\n        <NotesWrapper>\n          <ScaleNotes notes={props.currentScaleNotes}></ScaleNotes>\n        </NotesWrapper>\n      </PlayerNotesWrapper>\n    </Card>\n  );\n};\n\nconst TitleButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30%;\n  padding: 3% 3%;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 20%;\n  min-width: 60%;\n  margin-right: 5%;\n`;\n\nconst ScaleSelectorWrapper = styled.div`\n  width: 30%;\n`;\n\nconst PlayerNotesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50%;\n  padding 0 5%;\n`;\n\nconst NotesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 5%;\n  height: 100%;\n  width: 85%;\n`;\n\nexport default ScaleCard;\n","import React, { useState } from \"react\";\n\nconst BpmSlider = props => {\n  let [bpm, setBpm] = useState(120);\n  return (\n    <div>\n      <label htmlFor=\"bpmSlider\">BPM</label>\n      <input\n        name=\"bpmSlider\"\n        type=\"range\"\n        min=\"60\"\n        max=\"200\"\n        value={bpm}\n        onChange={e => {\n          let changedBpm = e.target.value;\n          props.onBpmChange(changedBpm);\n          setBpm(changedBpm);\n        }}\n      />\n      {bpm}\n    </div>\n  );\n};\n\nexport default BpmSlider;\n","import React, { Component } from \"react\";\nimport * as Tone from 'tone'\nimport { Chord, Scale } from \"@tonaljs/modules\";\nimport ChordCard from './components/organisms/cards/chordCard/chordCard'\nimport ChordScalePlayer from \"./components/atoms/chordScalePlayer/chordScalePlayer\";\nimport Footer from \"./components/atoms/footer\";\nimport Header from './components/atoms/header';\nimport ScaleCard from './components/organisms/cards/scaleCard/scaleCard'\nimport BpmSlider from './components/atoms/bpmSlider'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chord: {\n        root: 'C',\n        type: 'M7',\n      },\n      pallete: {\n        roots: {\n          title: 'Roots',\n          choices: ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']\n        },\n        types: {\n          title: 'Chord Types',\n          choices: ['M', 'm', 'M7', 'm7', '7', 'mM7']\n        }\n      },\n      chordScales: [],\n      currentScale: '',\n      currentScaleNotes: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateScale();\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.chord !== this.state.chord) {\n      this.updateScale();\n    }\n  }\n\n  getChordScales() {\n    return Chord.chordScales(Object.values(this.state.chord).join(\"\"));\n  }\n\n  getScaleNotes(scale) {\n    return Scale.scale(this.state.chord.root + \"4 \" + scale).notes;\n  }\n\n  updateScale() {\n    let currentScale = this.getChordScales()[0];\n    this.setState({\n      chordScales: this.getChordScales(),\n      currentScale: currentScale,\n      currentScaleNotes: this.getScaleNotes(currentScale)\n    });\n  }\n\n  handleEditChord(choice, palleteType) {\n    let chord = { ...this.state.chord };\n    chord[palleteType] = choice;\n    this.setState({ chord: chord })\n  }\n\n  handleScaleChange(selectedScale) {\n    this.setState({\n      currentScale: selectedScale,\n      currentScaleNotes: Scale.scale(\n        this.state.chord.root + \"4 \" + selectedScale\n      ).notes\n    });\n  }\n\n  handleBpmChange(bpm) {\n    Tone.Transport.bpm.value = bpm;\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header>\n          ScaleGrasper\n        </Header>\n        <div className=\"container\">\n          <div className=\"cardsWrapper\">\n            <ChordCard chord={this.state.chord}\n              pallete={this.state.pallete}\n              editChord={(choice, palleteType) => { this.handleEditChord(choice, palleteType) }} />\n            <ScaleCard\n              chord={this.state.chord}\n              chordScales={this.state.chordScales}\n              currentScale={this.state.currentScale}\n              currentScaleNotes={this.state.currentScaleNotes}\n              onScaleChange={(selectedScale) => this.handleScaleChange(selectedScale)}\n            ></ScaleCard>\n          </div>\n          <div className=\"controllerWrapper\">\n            <BpmSlider onBpmChange={bpm => this.handleBpmChange(bpm)} />\n          </div>\n          <div className=\"chordScaleWrapper\">\n            <ChordScalePlayer\n              notes={this.state.currentScaleNotes}\n              chord={this.state.chord}\n            ></ChordScalePlayer>\n          </div>\n        </div>\n        <Footer />\n\n        <style jsx>{`\n          .wrapper {\n            height: 100%;\n          }\n          .container {\n            display: flex:\n            justify-content: center;\n            padding: 0 5%;\n            margin: 0 auto;\n            height: 100%;\n          }\n          .cardsWrapper {\n            margin: 0 auto;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            height: 75%;\n          }\n          .controllerWrapper {\n            display:flex;\n            margin: 0 auto;\n          }\n          .chordScaleWrapper {\n            width: 10%;\n            height: 10%;\n            margin: 0 auto;\n            margin-top: 3%;\n          }\n        `}\n        </style>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}